version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: behavior-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-5001}:5001"
    volumes:
      - uploads_data:/app/uploads
      - outputs_data:/app/outputs
      - logs_data:/app/logs
      - database_data:/app/database
      - ./yolo_slowfast-master:/app/yolo_slowfast-master:ro
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - PYTHONPATH=/app
      - ENABLE_GUI=false
      - TZ=Asia/Shanghai
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - behavior-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: behavior-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - behavior-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: behavior-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - behavior-network
    profiles:
      - with-nginx

networks:
  behavior-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  uploads_data:
    driver: local
  outputs_data:
    driver: local
  logs_data:
    driver: local
  database_data:
    driver: local
